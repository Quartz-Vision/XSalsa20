name: CI/CD

on:
  release:
    types: [ published ]

jobs:
  # Main build - for everything
  build-full:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: linux-x86_64
            build_type: Release
          - os: macos-latest
            arch: macos-arm64
            build_type: Release
          - os: windows-latest
            arch: windows-x86_64
            build_type: Release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          sudo apt-get update
          sudo apt-get install -y build-essential cmake
        elif [ "$RUNNER_OS" = "macOS" ]; then
          brew install cmake
        elif [ "$RUNNER_OS" = "Windows" ]; then
          choco install cmake
        fi
      shell: bash

    - name: Configure and build
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DBUILD_TESTS=ON -DBUILD_BENCHMARKS=OFF -DBUILD_STATIC=ON -DBUILD_SHARED=ON
        cmake --build . --config ${{ matrix.build_type }} --parallel

    - name: Run tests
      run: |
        cd build
        if [ "$RUNNER_OS" = "Windows" ]; then
          ctest -C ${{ matrix.build_type }} --output-on-failure
        else
          ctest --output-on-failure
        fi
      shell: bash

    - name: Package static library
      run: |
        cd build
        make DESTDIR=./install install
        tar -czf xsalsa20-static-${{ matrix.arch }}.tar.gz -C install .

    - name: Package shared library
      run: |
        cd build
        make DESTDIR=./install install
        tar -czf xsalsa20-shared-${{ matrix.arch }}.tar.gz -C install .

    - name: Upload static artifact
      uses: actions/upload-artifact@v4
      with:
        name: xsalsa20-static-${{ matrix.arch }}
        path: build/xsalsa20-static-${{ matrix.arch }}.tar.gz

    - name: Upload shared artifact
      uses: actions/upload-artifact@v4
      with:
        name: xsalsa20-shared-${{ matrix.arch }}
        path: build/xsalsa20-shared-${{ matrix.arch }}.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: [build-full]
    if: github.event_name == 'release'

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create release assets
      run: |
        mkdir release-assets
        cp xsalsa20-static-linux-x86_64/xsalsa20-static-linux-x86_64.tar.gz release-assets/
        cp xsalsa20-shared-linux-x86_64/xsalsa20-shared-linux-x86_64.tar.gz release-assets/
        cp xsalsa20-static-windows-x86_64/xsalsa20-static-windows-x86_64.tar.gz release-assets/
        cp xsalsa20-shared-windows-x86_64/xsalsa20-shared-windows-x86_64.tar.gz release-assets/
        cp xsalsa20-static-macos-arm64/xsalsa20-static-macos-arm64.tar.gz release-assets/
        cp xsalsa20-shared-macos-arm64/xsalsa20-shared-macos-arm64.tar.gz release-assets/

    - name: Upload release assets
      uses: ncipollo/release-action@v1
      with:
        artifacts: "release-assets/*.tar.gz"
        token: ${{ secrets.GITHUB_TOKEN }} 